// src/node-fetch.ts
import * as nodeFetch from "node-fetch-native";
import { Readable } from "stream";
function install() {
  globalThis.fetch = globalThis.fetch ?? nodeFetch.default;
  globalThis.AbortController = globalThis.AbortController ?? nodeFetch.AbortController;
  globalThis.Blob = globalThis.Blob ?? nodeFetch.Blob;
  globalThis.File = globalThis.File ?? nodeFetch.File;
  globalThis.FormData = globalThis.FormData ?? nodeFetch.FormData;
  globalThis.Headers = globalThis.Headers ?? nodeFetch.Headers;
  globalThis.Request = globalThis.Request ?? nodeFetch.Request;
  if (globalThis.Response)
    return;
  class Response2 extends nodeFetch.Response {
    constructor(input, init) {
      if (input instanceof ReadableStream) {
        input = Readable.from(input);
      }
      super(input, init);
    }
  }
  globalThis.Response = Response2;
}
export {
  install as default
};
